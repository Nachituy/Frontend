name: Upload Website

on:
  push:
    branches:
    - Desarrollo

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v3
    
    - name: build
      uses: addnab/docker-run-action@v3
      with: 
        image: node:alpine
        options: -v ${{ github.workspace}}:/react-app
        run: cd /react-app && apk add yarn && yarn add -D webpack-cli && yarn build
        
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

    - uses: actions/cache@v3
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
       path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
       key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
       restore-keys: |
        ${{ runner.os }}-yarn-   
    - name: check dirs
      run: ls
  
  deploy:
    name: deploy to S3
    needs: build
    runs-on: ubuntu-latest
    steps: 
    
    - uses: actions/cache@v3
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
       path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
       key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
       restore-keys: |
        ${{ runner.os }}-yarn-   
    - name: check dirs
      run: ls
    - name: sync
      uses: ./
      with:
        args: --follow-symlinks --delete
                        
      env:
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN}}
       
        
      
        
        
        
